name: Docker Image CI

on: ['push', 'pull_request']

jobs:
  # Build & Test Job
  build-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x]
        os:
        - ubuntu-latest
        # - windows-latest
        # - macOS-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
        env:
          CI: true
      - name: cache node modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - run: |
          npm ci --no-optional
          npm run build:prod
          npm run test:ci

  # Dockerize and deploy
  # only if branch = master or develop
  docker-build-and-push:
    needs: build-test
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/develop'
    name: Docker Build and Publish
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # env specific
    - name: Set env to dev
      if: github.ref == 'refs/heads/develop'
      run: |
        echo "::set-env name=CLOUD_RUN_NAME::dev-${{ secrets.GCLOUD_APP_NAME }}"
    - name: Set env to production
      if: github.ref == 'refs/heads/master'
      run: |
        echo "::set-env name=CLOUD_RUN_NAME::${{ secrets.GCLOUD_APP_NAME }}"

    # Build the Docker image
    - name: Build
      run: |
        docker build . \
        --build-arg REACT_APP_BACKEND_URL=$REACT_APP_BACKEND_URL \
        --tag eu.gcr.io/${{ secrets.GCLOUD_PROJECT }}/${{ secrets.GCLOUD_APP_NAME }}:${GITHUB_SHA} \
        --tag eu.gcr.io/${{ secrets.GCLOUD_PROJECT }}/${{ secrets.GCLOUD_APP_NAME }}:${GITHUB_REF#refs/heads/}

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GCLOUD_GCR_SERVICE_KEY }}
        project_id: ${{ secrets.GCLOUD_PROJECT }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker
    # Push the Docker image to Google Container Registry
    # by pushing the registry without tag we push all available tags
    - name: Publish
      run: docker push eu.gcr.io/${{ secrets.GCLOUD_PROJECT }}/${{ secrets.GCLOUD_APP_NAME }}

    # Deploy image to Cloud Run
    - name: Deploy
      run: |-
        echo "deploy to cloud run $CLOUD_RUN_NAME" && \
        gcloud run deploy "$CLOUD_RUN_NAME" \
          --quiet \
          --region "europe-west1" \
          --image eu.gcr.io/${{ secrets.GCLOUD_PROJECT }}/${{ secrets.GCLOUD_APP_NAME }}:${GITHUB_SHA} \
          --platform "managed" \
          --allow-unauthenticated

